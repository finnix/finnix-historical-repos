#!/bin/sh

# Based on code originally (C) Klaus Knopper

set -e

PATH="/bin:/sbin:/usr/bin:/usr/sbin"
export PATH
umask 022

TMP="/tmp/fstab.$$.tmp"
ADDEDBY="Added by Finnix"
DEVROOT="/dev"

# Exit if script is already running
[ -e /proc/partitions ] || exit
if [ -e /var/run/rebuildfstab.pid ]; then
 if ps "$(cat /var/run/rebuildfstab.pid)" >/dev/null 2>/dev/null; then
  touch /var/run/rebuildfstab.rescan 2>/dev/null
  exit
 fi
 rm -f /var/run/rebuildfstab.pid
fi
echo "$$" >/var/run/rebuildfstab.pid

if [ -f /etc/finnix/initrd.env ]; then
  . /etc/finnix/initrd.env
fi

if [ "$FINNIX_FORENSIC" = "yes" ]; then
  FORENSICMSG="# fstab creation disabled in forensic mode"
  if ! grep -q "$FORENSICMSG" /etc/fstab; then
    echo "$FORENSICMSG" >>/etc/fstab
  fi
  exit 0
fi

# Go through fstab and grab a list of previous entries
PREVADDED=""
while read line; do
  if echo "$line" | grep -q "$ADDEDBY"'$'; then
    PREVADDED="$PREVADDED $(echo "$line" | awk '{print $1}') "
  fi
done <"/etc/fstab"

# Flush cache
blkid -g -p

# Loop through block devices, look for new entries
MASTERADDED=""
for i in `blkid -o device`; do
  FSTYPE=""
  DEVNAME="${i#/dev/}"
  MOUNTPOINT="/media/$DEVNAME"
  #OPTIONS="noauto,users,exec"
  OPTIONS="noauto"
  case "$i" in
    /dev/loop*|/dev/ram*|/dev/nbd*)
      continue
      ;;
    /dev/fd*)
      FSTYPE="auto"
      ;;
  esac

  case "$PREVADDED" in
    *" $i "*)
      MASTERADDED="$MASTERADDED $i "
      continue
      ;;
  esac

  LABEL=""
  if [ -z "$FSTYPE" ]; then
    while read name val; do
      case "$name" in
        TYPE) FSTYPE="$val" ;;
        LABEL) LABEL="$val" ;;
      esac
    done <<EOM
$(blkid -o export "$i" | sed 's/^\([A-Z0-9_]*\)=/\1 /g')
EOM
  fi
  [ -z "$FSTYPE" ] && FSTYPE="auto"
  case "$FSTYPE" in
    iso9660) OPTIONS="$OPTIONS,ro" ;;
    squashfs) OPTIONS="$OPTIONS,ro" ;;
    ntfs) OPTIONS="$OPTIONS,ro,umask=000" ;;
    vfat|msdos) OPTIONS="${OPTIONS},umask=000" ;;
    swap) OPTIONS="defaults"; MOUNTPOINT="none" ;;
    linux_raid_member) continue ;;
    crypto_LUKS) continue ;;
    LVM2_member) continue ;;
  esac
  if [ "$MOUNTPOINT" != "none" ]; then
    mkdir -p "/media/$DEVNAME" 2>/dev/null >/dev/null
  fi
  LINEADDEDBY="$ADDEDBY"
  [ -n "$LABEL" ] && LINEADDEDBY="($LABEL) $ADDEDBY"
  printf "%-15s %-15s %-8s %-20s %-s\n" "$i" "$MOUNTPOINT" "$FSTYPE" "$OPTIONS" "0 0 # $LINEADDEDBY" >>/etc/fstab
  MASTERADDED="$MASTERADDED $i "
done

# Weed out unused entries
while read line; do
  if echo "$line" | grep -q "$ADDEDBY"'$'; then
    DEVENTRY="$(echo "$line" | awk '{print $1}')"
    MOUNTPOINT="$(echo "$line" | awk '{print $2}')"
    case "$MASTERADDED" in
      *" $DEVENTRY "*)
        echo "$line" >>"$TMP"
        ;;
      *)
        rmdir "$MOUNTPOINT" 2>/dev/null >/dev/null || true
        ;;
    esac
  else
    echo "$line" >>"$TMP"
  fi
done <"/etc/fstab"
mv -f "$TMP" "/etc/fstab"

# Clean up
rm -f /var/run/rebuildfstab.pid

# If another copy tried to run while we were running, rescan.
if [ -e /var/run/rebuildfstab.rescan ]; then
  rm -f /var/run/rebuildfstab.rescan
  exec $0 "$@"
fi
