#!/bin/sh

# rebuildfstab
# Copyright (C) 2012 Ryan Finnie
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

set -e

PATH="/bin:/sbin:/usr/bin:/usr/sbin"
export PATH
umask 022

FSTABFILE="/etc/fstab"
PIDFILE="/var/run/rebuildfstab.pid"
RESCANFILE="/var/run/rebuildfstab.rescan"
ADDEDBY="Added by Finnix"
DEVROOT="/dev"

[ -e /proc/partitions ] || exit

if [ -f /etc/finnix/initrd.env ]; then
  . /etc/finnix/initrd.env
fi

# Do not modify /etc/fstab in forensic mode
if [ "$FINNIX_FORENSIC" = "yes" ]; then
  exit 0
fi

# Stagger execution of the script
sleep 0.$(expr $$ % 10)

# Exit if script is already running, telling the other running script
# to rescan when it's done
if [ -e "$PIDFILE" ]; then
  RUNNINGPID="$(cat "$PIDFILE")"
  if [ -n "$RUNNINGPID" -a -d "/proc/$RUNNINGPID" ]; then
    touch "$RESCANFILE" 2>/dev/null
    exit
  fi
  rm -f "$PIDFILE"
fi
echo "$$" >"$PIDFILE"

# Go through fstab and grab a list of non-automatic entries
TMP="$(mktemp)"
: >"$TMP"
while read line; do
  if ! echo "$line" | grep -q "$ADDEDBY"'$'; then
    echo "$line" >>"$TMP"
  fi
done <"$FSTABFILE"

# Flush cache
blkid -g -p

# Loop through block devices
for i in `blkid -o device`; do
  FSTYPE=""
  DEVNAME="${i#/dev/}"
  MOUNTPOINT="/media/$DEVNAME"
  OPTIONS="noauto"
  case "$i" in
    /dev/.*|/dev/loop*|/dev/ram*|/dev/nbd*)
      continue
      ;;
    /dev/fd*)
      FSTYPE="auto"
      ;;
  esac

  LABEL=""
  if [ -z "$FSTYPE" ]; then
    while read name val; do
      case "$name" in
        TYPE) FSTYPE="$val" ;;
        LABEL) LABEL="$val" ;;
      esac
    done <<EOM
$(blkid -o export "$i" | sed 's/^\([A-Z0-9_]*\)=/\1 /g')
EOM
  fi
  [ -z "$FSTYPE" ] && FSTYPE="auto"
  case "$FSTYPE" in
    iso9660) OPTIONS="$OPTIONS,ro" ;;
    squashfs) OPTIONS="$OPTIONS,ro" ;;
    ntfs) OPTIONS="$OPTIONS,ro,umask=000" ;;
    vfat|msdos) OPTIONS="${OPTIONS},umask=000" ;;
    swap) OPTIONS="defaults"; MOUNTPOINT="none" ;;
    linux_raid_member) continue ;;
    crypto_LUKS) continue ;;
    LVM2_member) continue ;;
  esac
  if [ "$MOUNTPOINT" != "none" ] && [ ! -d "/media/$DEVNAME" ]; then
    mkdir -p "/media/$DEVNAME" 2>/dev/null >/dev/null
  fi
  LINEADDEDBY="$ADDEDBY"
  [ -n "$LABEL" ] && LINEADDEDBY="($LABEL) $ADDEDBY"
  printf "%-15s %-15s %-8s %-20s %-s\n" "$i" "$MOUNTPOINT" "$FSTYPE" "$OPTIONS" "0 0 # $LINEADDEDBY" >>"$TMP"
done

cat "$TMP" >"$FSTABFILE"
rm -f "$TMP"

# Prevent too many rebuilds from happening in succession
sleep 3

# Clean up
rm -f "$PIDFILE"

# If another copy tried to run while we were running, rescan.
if [ -e "$RESCANFILE" ]; then
  rm -f "$RESCANFILE"
  exec $0 "$@"
fi
